#
# Repology updater default configuration
#
# This file contains default values for all Repology updater
# settings. You may override them in `repology.conf` file,
# any other file specifying path to it in REPOLOGY_CONF environment
# variable, or in repology-update.py command line arguments.
#
# Since this file is managed by git, you're advised to not
# change values for your local setup here. Instead, override them
# in `repology.conf`

#
# Postgresql database connect string
#
# Used by repology-update and repology-app
# Overridable via --dsn command line arg
#
DSN = "host=localhost dbname=repology user=repology password=repology"

#
# Directory to store repository data in
#
# Used in repology-update and repology-dump
# Overridable via --statedir command line arg
#
STATE_DIR = "_state"

#
# Directory to store parsed repository data in
#
# Used in repology-update and repology-dump
# Overridable via --parseddir command line arg
#
PARSED_DIR = "_parsed"

#
# Path to directory containing repository configuration YAML files
#
# Used by repology-update, repology-app, repology-dump
# Overridable via --repos-dir command line arg
#
REPOS_DIR = "repos.d"

#
# Path to directory containing package transformation rules YAML files
#
# Used by repology-update
# Overridable via --rules-dir command line arg
#
RULES_DIR = "rules.d"

#
# Path to directory for caching parsed configs
#
# Used by repology-update
# Overridable via --config-cache command line arg
#
CONFIG_CACHE_DIR = None

#
# Path to directory containing SQL queries
#
# Use by repology-update and repology-app
# Overridable with --sql-dir command line arg
#
SQL_DIR = "sql.d"

#
# Array of repository names or tags to work with
#
# Used by repology-update and repology-dump
# Overridable via free command line args
#
REPOSITORIES = ['production']

#
# Enable safety checks, such as check for minimal package count
#
# Used by repology-update
# Overridable via free command line args
#
ENABLE_SAFETY_CHECKS = True

#
# Address of repology instance this updater is related to
#
# For instance, it's used in repository fetcher User-Agent
#
REPOLOGY_HOME = 'https://repology.org'

#
# Point of time before which all history times are treated
# as unreliable
#
# When a new instance is initialized, historical data (such
# as information on known software releases) is initialized
# with current time, and it is not accurate because releases
# actually appeared in the past. Set this to unix time after
# the first instance update to make such unreliable timestamps
# ignored
#
HISTORY_CUTOFF_TIMESTAMP = 0

#
# Path to maintainers.yaml config
#
MAINTAINERS_CONFIG = 'maintainers.yaml'
